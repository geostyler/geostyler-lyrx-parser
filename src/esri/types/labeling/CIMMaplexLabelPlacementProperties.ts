/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

import { CIMObject } from "../CIMObject";
import { LabelFeatureType } from "./LabelFeatureType";

/**
 * Visual variable info types.
 *
 */
export type ExpressionReturnType = 0 | 1 | 2;
/**
 * Maplex connection types.
 *
 */
export type MaplexConnectionType = 0 | 1;
/**
 * Maplex offset constraint types.
 *
 */
export type MaplexConstrainOffset = 0 | 1 | 2 | 3 | 4;
/**
 * Maplex contour alignment types.
 *
 */
export type MaplexContourAlignmentType = 0 | 1 | 2;
/**
 * Maplex contour ladder types.
 *
 */
export type MaplexContourLadderType = 0 | 1 | 2;
/**
 * Maplex graticule alignment types.
 *
 */
export type MaplexGraticuleAlignmentType = 0 | 1 | 2 | 3;
/**
 * Maplex stacking alignment.
 *
 */
export type MaplexStackingAlignment = 0 | 1 | 2 | 3 | 4;
/**
 * Maplex line feature types.
 *
 */
export type MaplexLineFeatureType = 0 | 1 | 2 | 3 | 4;
/**
 * Maplex line placement methods.
 *
 */
export type MaplexLinePlacementMethod = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;
/**
 * Maplex units.
 *
 */
export type MaplexUnit = 0 | 1 | 2 | 3 | 4;
/**
 * Maplex multipart options.
 *
 */
export type MaplexMultiPartOption = 0 | 1 | 2;
/**
 * Maplex offset along the line methods.
 *
 */
export type MaplexOffsetAlongLineMethod = 0 | 1 | 2 | 3 | 4;
/**
 * Maplex label anchor point.
 *
 */
export type MaplexLabelAnchorPoint = 0 | 1 | 2;
/**
 * Maplex point placement methods.
 *
 */
export type MaplexPointPlacementMethod = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
/**
 * Maplex anchor point types.
 *
 */
export type MaplexAnchorPointType = 0 | 1 | 2 | 3;
/**
 * Maplex polygon feature types.
 *
 */
export type MaplexPolygonFeatureType = 0 | 1 | 2 | 3;
/**
 * Maplex polygon placement methods.
 *
 */
export type MaplexPolygonPlacementMethod = 0 | 1 | 2 | 3 | 4 | 5;
/**
 * Maplex rotation types.
 *
 */
export type MaplexLabelRotationType = 0 | 1 | 2 | 3;
/**
 * Maplex rotation alignment types.
 *
 */
export type MaplexRotationAlignmentType = 0 | 1 | 2;

/**
 * Represents Maplex label placement properties.
 *
 */
export type CIMMaplexLabelPlacementProperties = CIMObject & {
  /**
   * Gets or sets the feature type being labeled.
   */
  featureType?: LabelFeatureType;
  /**
   * Gets or sets a value indicating whether to align the label with the label direction so the label may appear upside down.
   */
  alignLabelToLineDirection?: boolean;
  /**
   * Gets or sets a value indicating whether a label may overrun one side of a polygon feature.
   */
  allowAsymmetricOverrun?: boolean;
  /**
   * Gets or sets a value indicating whether a stacked label may straddle the line feature.
   */
  allowStraddleStacking?: boolean;
  /**
   * Gets or sets the ExpressionInfo for the alternate label expression.
   */
  alternateLabelExpressionInfo?: null | CIMExpressionInfo;
  /**
   * Gets or sets a value indicating whether labels should avoid holes in polygons.
   */
  avoidPolygonHoles?: boolean;
  /**
   * Gets or sets a value indicating whether to place the label first and allow other labels to be placed over it.
   */
  backgroundLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to allow holes in boundary labeling.
   */
  boundaryLabelingAllowHoles?: boolean;
  /**
   * Gets or sets a value indicating whether to allow single sided boundary labeling.
   */
  boundaryLabelingAllowSingleSided?: boolean;
  /**
   * Gets or sets a value indicating whether single sided boundary label is centered on line.
   */
  boundaryLabelingSingleSidedOnLine?: boolean;
  /**
   * Gets or sets a value indicating whether to abbreviate the label using an abbreviation dictionary.
   */
  canAbbreviateLabel?: boolean;
  /**
   * Gets or sets a value indicating whether a stacked label may be flipped over to obtain a better position.
   */
  canFlipStackedStreetLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to key number the label and feature.
   */
  canKeyNumberLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to place the label over end of line or over polygon boundary.
   */
  canOverrunFeature?: boolean;
  /**
   * Gets or sets a value indicating whether the label can be placed on top of the street feature.
   */
  canPlaceLabelOnTopOfFeature?: boolean;
  /**
   * Gets or sets a value indicating whether to place a label outside the polygon if it does not fit inside.
   */
  canPlaceLabelOutsidePolygon?: boolean;
  /**
   * Gets or sets a value indicating whether to reduce the size of the font.
   */
  canReduceFontSize?: boolean;
  /**
   * Gets or sets a value indicating whether the leading can be reduced for a stacked label.
   */
  canReduceLeading?: boolean;
  /**
   * Gets or sets a value indicating whether to remove the label if it overlaps with other labels.
   */
  canRemoveOverlappingLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to allow the point label to be shifted upon a fixed position.
   */
  canShiftPointLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to stack the label to obtain a better position.
   */
  canStackLabel?: boolean;
  /**
   * Gets or sets a value indicating whether to truncate the label using an algorithm.
   */
  canTruncateLabel?: boolean;
  /**
   * Gets or sets a value indicating whether an alternate label expression is allowed to be used.
   */
  canUseAlternateLabelExpression?: boolean;
  /**
   * Gets or sets the options for connecting line features.
   */
  connectionType?: MaplexConnectionType;
  /**
   * Gets or sets the label constraint options.
   */
  constrainOffset?: MaplexConstrainOffset;
  /**
   * Gets or sets the options for the contour label alignment.
   */
  contourAlignmentType?: MaplexContourAlignmentType;
  /**
   * Gets or sets the options for the contour label ladder types.
   */
  contourLadderType?: MaplexContourLadderType;
  /**
   * Gets or sets the maximum angle at which a contour label may be placed.
   */
  contourMaximumAngle?: number;
  /**
   * Gets or sets the name of the abbreviations dictionary referenced by this layer.
   */
  dictionaryName?: null | string;
  /**
   * Gets or sets a value indicating whether to turn off line connection.
   */
  enableConnection?: boolean;
  /**
   * Gets or sets a value indicating whether to use user-defined point placement priorities.
   */
  enablePointPlacementPriorities?: boolean;
  /**
   * Gets or sets a value indicating whether a label is to be placed at a fixed position in the polygon.
   */
  enablePolygonFixedPosition?: boolean;
  /**
   * Gets or sets a value indicating whether to place a label at a secondary offset from the line feature.
   */
  enableSecondaryOffset?: boolean;
  /**
   * Gets or sets the feature weight which controls which features may be overlapped and to what extent.
   */
  featureWeight?: number;
  /**
   * Gets or sets font height reduction limit. The font may be reduced in height until this limit is reached.
   */
  fontHeightReductionLimit?: number;
  /**
   * Gets or sets font height reduction step. This is the step interval for font height reduction.
   */
  fontHeightReductionStep?: number;
  /**
   * Gets or sets font width reduction limit. The font may be reduced in width until this limit is reached.
   */
  fontWidthReductionLimit?: number;
  /**
   * Gets or sets font width reduction step. This is the step interval for font width reduction.
   */
  fontWidthReductionStep?: number;
  /**
   * Gets or sets a value indicating whether to enable graticule alignment.
   */
  graticuleAlignment?: boolean;
  /**
   * Gets or sets the options for the graticule alignment type.
   */
  graticuleAlignmentType?: MaplexGraticuleAlignmentType;
  /**
   * Gets or sets a value indicating whether the label buffer is a hard constraint and must be honored.
   *
   */
  isLabelBufferHardConstraint?: boolean;
  /**
   * Gets or sets a value indicating whether the minimum feature size for labeling is based on area.
   *
   */
  isMinimumSizeBasedOnArea?: boolean;
  /**
   * Gets or sets a value indicating whether to measure the label offset from the feature geometry.
   *
   */
  isOffsetFromFeatureGeometry?: boolean;
  /**
   * Gets or sets the name of the key number group to use for key numbering the labels.
   *
   */
  keyNumberGroupName?: null | string;
  /**
   * Gets or sets the label buffer. Increase buffer to stop labels from being placed too close to each other.
   *
   */
  labelBuffer?: number;
  /**
   * Gets or sets a value indicating whether to label only the largest polygon in a compound polygon feature.
   *
   */
  labelLargestPolygon?: boolean;
  /**
   * Gets or sets the label priority. Label priority controls approximate placement order.
   *
   */
  labelPriority?: number;
  /**
   * Gets or sets the label stacking properties for a layer.
   *
   */
  labelStackingProperties?: null | CIMMaplexLabelStackingProperties;
  /**
   * Gets or sets the line feature type.
   *
   */
  lineFeatureType?: MaplexLineFeatureType;
  /**
   * Gets or sets the line placement method.
   *
   */
  linePlacementMethod?: MaplexLinePlacementMethod;
  /**
   * Gets or sets the maximum character spacing. Character spacing may be increased up to this limit.
   *
   */
  maximumCharacterSpacing?: number;
  /**
   * Gets or sets the maximum distance that a label is allowed to overrun the end of its feature.
   *
   */
  maximumLabelOverrun?: number;
  /**
   * Gets or sets the label overrun unit.
   */
  maximumLabelOverrunUnit?: MaplexUnit;
  /**
   * Gets or sets maximum word spacing. The word spacing may be increased up to this limit.
   */
  maximumWordSpacing?: number;
  /**
   * Gets or sets minimum clearance between street label and street end.
   */
  minimumEndOfStreetClearance?: number;
  /**
   * Gets or sets minimum feature size unit.
   */
  minimumFeatureSizeUnit?: MaplexUnit;
  /**
   * Gets or sets the interval that must elapse before label is repeated.
   */
  minimumRepetitionInterval?: number;
  /**
   * Gets or sets the minimum size of a line or area feature for it to be labeled.
   */
  minimumSizeForLabeling?: number;
  /**
   * Gets or sets the option for labeling multi-part shapes.
   */
  multiPartOption?: MaplexMultiPartOption;
  /**
   * Gets or sets a value indicating whether to not remove the label if no position is found.
   */
  neverRemoveLabel?: boolean;
  /**
   * Gets or sets the offset along line properties for a layer.
   */
  offsetAlongLineProperties?: null | CIMMaplexOffsetAlongLineProperties;
  /**
   * Gets or sets the properties which control placement of a label around point feature.
   */
  pointExternalZonePriorities?: null | CIMMaplexExternalZonePriorities;
  /**
   * Gets or sets the point placement method.
   */
  pointPlacementMethod?: MaplexPointPlacementMethod | string;
  /**
   * Gets or sets the polygon anchor point type.
   */
  polygonAnchorPointType?: MaplexAnchorPointType;
  /**
   * Gets or sets the feature weight for the boundary of the polygon.
   */
  polygonBoundaryWeight?: number;
  /**
   * Gets or sets the placement priorities associated with zones external to the polygon.
   */
  polygonExternalZones?: null | CIMMaplexExternalZonePriorities;
  /**
   * Gets or sets the polygon feature type.
   */
  polygonFeatureType?: MaplexPolygonFeatureType;
  /**
   * Gets or sets the placement priorities associated with zones internal to the polygon.
   */
  polygonInternalZones?: null | CIMMaplexInternalZonePriorities;
  /**
   * Gets or sets the polygon placement method.
   */
  polygonPlacementMethod?: MaplexPolygonPlacementMethod;
  /**
   * Gets or sets a value indicating whether there is a preference to place the label horizontally.
   */
  preferHorizontalPlacement?: boolean;
  /**
   * Gets or sets a value indicating whether there is a preference for placing a line label near a junction.
   */
  preferLabelNearJunction?: boolean;
  /**
   * Gets or sets the preferred clearance for placing a line label near a junction.
   */
  preferLabelNearJunctionClearance?: number;
  /**
   * Gets or sets a value indicating whether there is a preference for placing a line label near the map border.
   */
  preferLabelNearMapBorder?: boolean;
  /**
   * Gets or sets the preferred clearance for placing a line label near the map border.
   */
  preferLabelNearMapBorderClearance?: number;
  /**
   * Gets or sets the preferred clearance between street label and street end.
   */
  preferredEndOfStreetClearance?: number;
  /**
   * Gets or sets the primary offset between label and symbol.
   */
  primaryOffset?: number;
  /**
   * Gets or sets the unit of the primary offset.
   */
  primaryOffsetUnit?: MaplexUnit;
  /**
   * Gets or sets a value indicating whether extra line breaks are removed from the label text.
   */
  removeExtraLineBreaks?: boolean;
  /**
   * Gets or sets a value indicating whether extra white space characters are removed from the label text.
   */
  removeExtraWhiteSpace?: boolean;
  /**
   * Gets or sets a value indicating whether to enable the repetition of label along line feature.
   */
  repeatLabel?: boolean;
  /**
   * Gets or sets the label repetition interval unit.
   */
  repetitionIntervalUnit?: MaplexUnit;
  /**
   * Gets or sets the label rotation properties.
   */
  rotationProperties?: null | CIMMaplexRotationProperties;
  /**
   * Gets or sets the secondary offset between label and symbol.
   */
  secondaryOffset?: number;
  /**
   * Gets or sets the secondary offset maximum.
   */
  secondaryOffsetMaximum?: number;
  /**
   * Gets or sets the secondary offset minimum.
   */
  secondaryOffsetMinimum?: number;
  /**
   * Gets or sets a value indicating whether to spread label characters along line features.
   */
  spreadCharacters?: boolean;
  /**
   * Gets or sets a value indicating whether to whether to spread words along line features.
   */
  spreadWords?: boolean;
  /**
   * Gets or sets the priority of a placement strategy when placing text.
   */
  strategyPriorities?: null | CIMMaplexStrategyPriorities;
  /**
   * Gets or sets a value indicating whether to remove duplicate labels that lie within a specified distance of each other.
   */
  thinDuplicateLabels?: boolean;
  /**
   * Gets or sets the distance used to control the thinning of duplicate labels.
   */
  thinningDistance?: number;
  /**
   * Gets or sets the thinning distance unit.
   */
  thinningDistanceUnit?: MaplexUnit;
  /**
   * Gets or sets the marker character used by the truncation strategy.
   */
  truncationMarkerCharacter?: null | string;
  /**
   * Gets or sets the minimum length of a label used by the truncation strategy.
   */
  truncationMinimumLength?: number;
  /**
   * Gets or sets the preferred characters used by the truncation strategy. These characters will be removed as needed.
   */
  truncationPreferredCharacters?: null | string;
  /**
   * Gets or sets a value indicating whether to use the exact polygon outline of a symbol when measuring the label offset.
   */
  useExactSymbolOutline?: boolean;
  /**
   * Gets or sets the excluded characters used by the truncation strategy. These characters will never be removed by truncation.
   */
  truncationExcludedCharacters?: null | string;
  /**
   * Gets or sets the inset value for perimeter polygon anchor leader anchor points.
   */
  polygonAnchorPointPerimeterInset?: number;
  /**
   * Gets or sets the unit of the inset value for perimeter polygon anchor points.
   */
  polygonAnchorPointPerimeterInsetUnit?: MaplexUnit;
}
/**
 * Represents the properties required for authoring an Arcade expression.
 */
export type CIMExpressionInfo = {
  /**
   * Gets or sets the human readable text that describes the expression.
   */
  title?: null | string;
  /**
   * Gets or sets the Arcade expression used to evaluate and return the value that a property expects.
   */
  expression?: null | string;
  /**
   * Gets or sets the Name of the expression.
   */
  name?: null | string;
  /**
   * Gets or sets the ReturnType of the expression.
   */
  returnType?: ExpressionReturnType;
}
/**
 * Represents Maplex label stacking properties.
 *
 */
export type CIMMaplexLabelStackingProperties = CIMObject & {
  /**
   * Gets or sets the stacking alignment.
   */
  stackAlignment?: MaplexStackingAlignment;
  /**
   * Gets or sets the maximum number of lines.
   */
  maximumNumberOfLines?: number;
  /**
   * Gets or sets the minimum number of characters per line.
   */
  minimumNumberOfCharsPerLine?: number;
  /**
   * Gets or sets the maximum number of characters per line.
   */
  maximumNumberOfCharsPerLine?: number;
  /**
   * Gets or sets the stacking separators.
   */
  separators?: CIMMaplexStackingSeparator[] | null;
  /**
   * Gets or sets a value indicating whether leading and trailing stacking separators are trimmed from the label string.
   */
  trimStackingSeparators?: boolean;
}
/**
 * Represents a Maplex stacking separator.
 *
 */
export interface CIMMaplexStackingSeparator {
  /**
   * Gets or sets the separator as a string of one character.
   */
  separator?: null | string;
  /**
   * Gets or sets a value indicating whether or not the separator should be visible after stacking.
   */
  visible?: boolean;
  /**
   * Gets or sets a value indicating whether or not to force a split at every instance of the separator.
   */
  splitForced?: boolean;
  /**
   * Gets or sets a value indicating whether or not to split after the separator.
   */
  splitAfter?: boolean;
}
/**
 * Represents Maplex offset along the line properties.
 *
 */
export interface CIMMaplexOffsetAlongLineProperties {
  /**
   * Gets or sets the placement method.
   */
  placementMethod?: MaplexOffsetAlongLineMethod;
  /**
   * Gets or sets the label anchor point for positioning along the line.
   */
  labelAnchorPoint?: MaplexLabelAnchorPoint;
  /**
   * Gets or sets the distance along the line.
   */
  distance?: number;
  /**
   * Gets or sets the tolerance.
   */
  tolerance?: number;
  /**
   * Gets or sets the distance unit.
   */
  distanceUnit?: MaplexUnit;
  /**
   * Gets or sets a value indicating whether or not to use the line direction.
   */
  useLineDirection?: boolean;
}
/**
 * Represents Maplex external zone priorities.
 *
 */
export interface CIMMaplexExternalZonePriorities {
  /**
   * Gets or sets priority for this position.
   */
  aboveLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  aboveCenter?: number;
  /**
   * Gets or sets priority for this position.
   */
  aboveRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  centerRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowCenter?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  centerLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  center?: number;
}
/**
 * Represents Maplex internal zone priorities.
 *
 */
export interface CIMMaplexInternalZonePriorities {
  /**
   * Gets or sets priority for this position.
   */
  aboveLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  aboveCenter?: number;
  /**
   * Gets or sets priority for this position.
   */
  aboveRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  centerRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowRight?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowCenter?: number;
  /**
   * Gets or sets priority for this position.
   */
  belowLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  centerLeft?: number;
  /**
   * Gets or sets priority for this position.
   */
  center?: number;
}
/**
 * Represents Maplex rotation properties.
 *
 */
export interface CIMMaplexRotationProperties {
  /**
   * Gets or sets a value indicating whether to enable rotation.
   */
  enable?: boolean;
  /**
   * Gets or sets the rotation type.
   */
  rotationType?: MaplexLabelRotationType;
  /**
   * Gets or sets the rotation field to get values from.
   */
  rotationField?: null | string;
  /**
   * Gets or sets a value indicating whether to place the label perpendicular to the angle.
   */
  perpendicularToAngle?: boolean;
  /**
   * Gets or sets a value indicating whether or not to align the label to the angle.
   */
  alignLabelToAngle?: boolean;
  /**
   * Gets or sets the alignment type.
   */
  alignmentType?: MaplexRotationAlignmentType;
  /**
   * Gets or sets additional angle to add to the data value.
   */
  additionalAngle?: number;
  /**
   * Gets or sets ExpressionInfo that contains the Arcade expression that returns rotation as a number.
   *  When both RotationField and RotationExpressionInfo are present RotationExpressionInfo is used.
   */
  rotationExpressionInfo?: null | CIMExpressionInfo;
}
/**
 * Represents Maplex strategy priorities.
 *
 */
export interface CIMMaplexStrategyPriorities {
  /**
   * Gets or sets the priority for stacking.
   */
  stacking?: number;
  /**
   * Gets or sets the priority for overrun.
   */
  overrun?: number;
  /**
   * Gets or sets the priority for font compression.
   */
  fontCompression?: number;
  /**
   * Gets or sets the priority for font reduction.
   */
  fontReduction?: number;
  /**
   * Gets or sets the priority for abbreviation.
   */
  abbreviation?: number;
}
